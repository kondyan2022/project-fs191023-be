{
  "openapi": "3.0.0",
  "info": {
    "title": "Power Pulse API",
    "version": "1.0.0",
    "description": "Back-end for Power Pulse's team"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://power-plus-service.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User registration data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "One"
                },
                "email": {
                  "type": "string",
                  "example": "one3@one.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with user credentials",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User login data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "one3@one.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout the user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User data for logout",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "one3@one.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },

    "/exercises/": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Give you list of trainings",
        "parameters": [
          {
            "name": "getExercises",
            "in": "path",
            "description": "Give you list of trainings",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You are got exercises list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bodyPart": {
                        "type": "string",
                        "example": "Legs"
                      },
                      "equipment": {
                        "type": "string",
                        "example": "Dumbbells"
                      },
                      "gifUrl": {
                        "type": "string",
                        "example": "https://example.com/exercise.gif"
                      },
                      "name": {
                        "type": "string",
                        "example": "Squat"
                      },
                      "target": {
                        "type": "string",
                        "example": "Strength"
                      },
                      "burnedCalories": {
                        "type": "number",
                        "format": "float",
                        "example": 250.5
                      },
                      "time": {
                        "type": "number",
                        "format": "int32",
                        "example": 30
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "There won't be a list of exercises, something went wrong."
          }
        }
      }
    },
    "/exercises/exercisegroups": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Give you list of filters",
        "parameters": [
          {
            "name": "getExercisesGroups",
            "in": "path",
            "description": "Give you list of filters",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You are got filters list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "string",
                        "example": "Legs"
                      },
                      "name": {
                        "type": "string",
                        "example": "Aboba"
                      },
                      "imgURL": {
                        "type": "string",
                        "example": "https://example.com/exercise.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "There won't be a list of exercises, something went wrong."
          }
        }
      }
    },
    "/diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "summary": "Request for get all products and exercises by selected date",
        "description": "For getting response you must write your date in the URL in the format monthdayyear. For example: https://power-plus-service.onrender.com/diary/10242023",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Date in the format monthdayyear (e.g., 10242023)"
          }
        ],
        "responses": {
          "200": {
            "description": "You are got exercises list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "653800e44af33653569e9d93"
                    },
                    "name": {
                      "type": "string",
                      "example": "www"
                    },
                    "email": {
                      "type": "string",
                      "example": "karavang@gmail.com"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "//www.gravatar.com/avatar/e620fe25eac4f8d8efc707f27f5523d7"
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "height": {
                          "type": "integer",
                          "example": 170
                        },
                        "currentWeight": {
                          "type": "integer",
                          "example": 65
                        },
                        "desiredWeight": {
                          "type": "integer",
                          "example": 70
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "example": "2000-12-20"
                        },
                        "blood": {
                          "type": "integer",
                          "example": 4
                        },
                        "sex": {
                          "type": "string",
                          "example": "male"
                        },
                        "levelActivity": {
                          "type": "integer",
                          "example": 3
                        },
                        "DSN": {
                          "type": "integer",
                          "example": 110
                        },
                        "BMR": {
                          "type": "integer",
                          "example": 4823
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Something has gone wrong. Check if the date is entered and if you are making the request correctly."
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": ["Products"],
        "summary": "Give you products",
        "parameters": [
          {
            "name": "getProducts",
            "in": "path",
            "description": "Give you products",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You get products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "weight": {
                        "type": "number",
                        "example": "100"
                      },
                      "calories": {
                        "type": "number",
                        "example": "300"
                      },
                      "category": {
                        "type": "string",
                        "example": "vegetables and herbs"
                      },
                      "title": {
                        "type": "string",
                        "example": "Salads Belaya Dacha Delicate root"
                      },
                      "groupBloodNotAllowed": {
                        "type": "object",
                        "properties": {
                          "1": {
                            "type": "boolean",
                            "example": "true"
                          },
                          "2": {
                            "type": "boolean",
                            "example": "true"
                          },
                          "3": {
                            "type": "boolean",
                            "example": "true"
                          },
                          "4": {
                            "type": "boolean",
                            "example": "true"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "There aren't products, something went wrong."
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Give you list of products",
        "parameters": [
          {
            "name": "getProductsList",
            "in": "path",
            "description": "Give you list of products",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You get a list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "alcoholic drinks"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "There won't be a list of products, something went wrong."
          }
        }
      }
    },
    "/users/profile": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update user profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "default": "Bearer Token",
            "description": "Authorization header with Bearer Token",
            "required": true
          },
          {
            "in": "body",
            "name": "profileData",
            "description": "User profile data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "653800e44af33653569e9d93"
                },
                "name": {
                  "type": "string",
                  "example": "www"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "karavang@gmail.com"
                },
                "avatarURL": {
                  "type": "string",
                  "format": "uri",
                  "example": "//www.gravatar.com/avatar/e620fe25eac4f8d8efc707f27f5523d7"
                },
                "profile": {
                  "type": "object",
                  "properties": {
                    "height": {
                      "type": "integer",
                      "format": "int32",
                      "example": 170
                    },
                    "currentWeight": {
                      "type": "number",
                      "format": "float",
                      "example": 65
                    },
                    "desiredWeight": {
                      "type": "number",
                      "format": "float",
                      "example": 70
                    },
                    "birthday": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2000-12-20T00:00:00.000Z"
                    },
                    "blood": {
                      "type": "integer",
                      "format": "int32",
                      "example": 4
                    },
                    "sex": {
                      "type": "string",
                      "enum": ["male", "female"],
                      "example": "male"
                    },
                    "levelActivity": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    },
                    "DSN": {
                      "type": "integer",
                      "example": 110
                    },
                    "BMR": {
                      "type": "integer",
                      "example": 4823
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Upload user avatar",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "default": "Bearer Token",
            "description": "Authorization header with Bearer Token",
            "required": true
          },
          {
            "in": "formData",
            "name": "avatar",
            "type": "file",
            "description": "User avatar file to upload",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar uploaded successfully"
          }
        }
      }
    },
    "/avatars/{avatarFileName}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user avatar",
        "produces": ["image/jpeg", "image/png", "image/gif"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "default": "Bearer Token",
            "description": "Authorization header with Bearer Token",
            "required": true
          },
          {
            "in": "path",
            "name": "avatarFileName",
            "type": "string",
            "description": "The filename of the avatar to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar retrieved successfully",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user information",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "653800e44af33653569e9d93"
                    },
                    "name": {
                      "type": "string",
                      "example": "www"
                    },
                    "email": {
                      "type": "string",
                      "example": "karavang@gmail.com"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "//www.gravatar.com/avatar/e620fe25eac4f8d8efc707f27f5523d7"
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "height": {
                          "type": "integer",
                          "example": 170
                        },
                        "currentWeight": {
                          "type": "number",
                          "example": 65
                        },
                        "desiredWeight": {
                          "type": "number",
                          "example": 70
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2000-12-20T00:00:00.000Z"
                        },
                        "blood": {
                          "type": "integer",
                          "example": 4
                        },
                        "sex": {
                          "type": "string",
                          "example": "male"
                        },
                        "levelActivity": {
                          "type": "integer",
                          "example": 3
                        },
                        "DSN": {
                          "type": "integer",
                          "example": 110
                        },
                        "BMR": {
                          "type": "integer",
                          "example": 4823
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
