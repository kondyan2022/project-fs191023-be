{
  "openapi": "3.0.1",
  "info": {
    "title": "Power Pulse API",
    "version": "1.0.0",
    "description": "Back-end for Power Pulse's team",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://power-plus-service.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with user credentials",
        "parameters": [],
        "requestBody": {
          "description": "User login data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout the user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/users/googleLogin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Route for login after Google authentification",
        "parameters": [],
        "requestBody": {
          "description": "User login data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "description": "User email" }
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CurrentUserResponse" }
              }
            }
          }
        }
      }
    },
    "/users": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update user profile",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CurrentUserResponse" }
              }
            }
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Upload user avatar",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "avatarURL": { "type": "string" } },
                  "example": {
                    "avatarURL": "avatars/6538e3ccfc9b82da0c901910.jpg"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/exercises/exerciseGroups": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Give you a list of filters",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "You get a list of filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseGroupsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/exercises/search": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Give you a list of trainings with filters and pagination",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "description": "Filter filed name for exercise group.",
            "schema": {
              "type": "string",
              "enum": ["Body parts", "Equipment", "Muscles"],
              "example": "equipment"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "Value for field specified in 'filter' parameter",
            "schema": { "type": "string", "example": "barbell" }
          },
          {
            "in": "query",
            "name": "target",
            "description": "Value for filter by field 'target'",
            "schema": { "type": "string", "example": "lats" }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number ",
            "schema": { "type": "number", "example": 0, "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Item per page",
            "schema": { "type": "number", "example": 20, "default": 20 }
          }
        ],
        "responses": {
          "200": {
            "description": "You get a page of exercises with pagination data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "equipment": { "type": "string" },
                        "target": { "type": "string" }
                      },
                      "example": {
                        "equipment": "barbell",
                        "target": "lats"
                      }
                    },
                    "page": { "type": "number" },
                    "limit": { "type": "number" },
                    "totalPage": { "type": "number" },
                    "totalCount": { "type": "number" },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": { "type": "string" },
                          "bodyPart": {
                            "type": "string"
                          },
                          "equipment": {
                            "type": "string"
                          },
                          "gifUrl": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "target": {
                            "type": "string"
                          },
                          "burnedCalories": {
                            "type": "integer"
                          },
                          "time": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "filter": {
                      "equipment": "dumbbell",
                      "target": "pectorals"
                    },
                    "page": 0,
                    "limit": 20,
                    "totalPage": 3,
                    "totalCount": 43,
                    "results": [
                      {
                        "_id": "64f2458d6f67bc34bae4fae0",
                        "bodyPart": "chest",
                        "equipment": "dumbbell",
                        "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/1276.gif",
                        "name": "dumbbell decline one arm fly",
                        "target": "pectorals",
                        "burnedCalories": 205,
                        "time": 3
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },

    "/diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "security": [{ "Bearer": [] }],
        "summary": "Request for getting of all products and exercises by selected date",
        "description": "For getting response you must write your date in the URL in the format dd/mm/yyyy. For example: https://power-plus-service.onrender.com/diary/10242023",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Date in the format  dd/mm/yyyy (e.g., 24/10/2023)",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "You get a list of exercises",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },
    "/diary/product": {
      "post": {
        "tags": ["Diary"],
        "security": [{ "Bearer": [] }],
        "summary": "Request for adding of product to diary for selected date",
        "description": "Request for adding of product to diary for selected date",
        "parameters": [],

        "requestBody": {
          "description": " ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductDiaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You get a list of exercises",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },
    "/diary/exercise": {
      "post": {
        "tags": ["Diary"],
        "security": [{ "Bearer": [] }],
        "summary": "Request for adding exercise to diary for selected date",
        "description": "Request for adding exercise to diary for selected date",
        "parameters": [],

        "requestBody": {
          "description": " ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExerciseDiaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You get a list of exercises",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },

    "/diary/item": {
      "delete": {
        "tags": ["Diary"],
        "security": [{ "Bearer": [] }],
        "summary": "Request for delete exercise  or product item  from diary for selected date",
        "description": "Request for delete exercise  or product item  from diary for selected date",
        "parameters": [],

        "requestBody": {
          "description": " ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemDeleteFromDiaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You get a list of exercises",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },

    "/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Give you a list of products",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "You get a list of products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "tags": ["Products"],
        "summary": "Give you a list of products with search, filters and pagination",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "Text filter for 'title' field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "description": "Category for selection",
            "schema": {
              "type": "string",
              "enum": [
                "alcoholic drinks",
                "berries",
                "cereals",
                "dairy",
                "dried fruits",
                "eggs",
                "fish",
                "flour",
                "fruits",
                "meat",
                "mushrooms",
                "nuts",
                "oils and fats",
                "poppy",
                "sausage",
                "seeds",
                "sesame",
                "soft drinks",
                "vegetables and herbs"
              ]
            }
          },
          {
            "in": "query",
            "name": "recommend",
            "description": "Recommend for filter by field 'groupBloodNotAllowed' ",
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number",
            "schema": { "type": "number", "example": 0, "default": 0 }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Item per page",
            "schema": { "type": "number", "example": 20, "default": 20 }
          }
        ],
        "responses": {
          "200": {
            "description": "You get a page of exercises with pagination data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searchKey": { "type": "string" },
                    "category": { "type": "string" },
                    "recommend": { "type": "string" },
                    "page": { "type": "number" },
                    "limit": { "type": "number" },
                    "totalPage": { "type": "number" },
                    "totalCount": { "type": "number" },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": { "type": "string" },
                          "weight": {
                            "type": "integer",
                            "example": "100"
                          },
                          "calories": {
                            "type": "integer",
                            "example": "300"
                          },
                          "category": {
                            "type": "string",
                            "example": "vegetables and herbs"
                          },
                          "title": {
                            "type": "string",
                            "example": "Salads Belaya Dacha Delicate root"
                          },
                          "groupBloodNotAllowed": {
                            "type": "object",
                            "properties": {
                              "1": {
                                "type": "boolean",
                                "example": "true"
                              },
                              "2": {
                                "type": "boolean",
                                "example": "true"
                              },
                              "3": {
                                "type": "boolean",
                                "example": "true"
                              },
                              "4": {
                                "type": "boolean",
                                "example": "true"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },
    "/stats/": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Total statistic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics of Power Pulse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countOfExercises": { "type": "number" },
                    "totalBurnedCalories": { "type": "number" },
                    "totalExercisesTime": { "type": "number" },
                    "userCount": { "type": "number" },
                    "videoGuides": { "type": "number" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "profile": {
        "type": "object",
        "required": [
          "height, currentWeight, desiredWeight, birthday, blood, sex, levelActivity, DSN, BMR"
        ],
        "properties": {
          "height": {
            "type": "integer",
            "description": "User height",
            "minimum": 150,
            "example": 170
          },
          "currentWeight": {
            "type": "integer",
            "description": "Current weight of user",
            "minimum": 35,
            "example": 85
          },
          "desiredWeight": {
            "type": "integer",
            "description": "Desire weight for user",
            "minimum": 35,
            "example": 70
          },
          "birthday": {
            "type": "string",
            "description": "Birth date",
            "format": "UTC",
            "example": "2000-12-20T00:00:00.000Z"
          },
          "blood": {
            "type": "integer",
            "description": "Blood type",
            "enum": [1, 2, 3, 4],
            "example": 4
          },
          "sex": {
            "type": "string",
            "description": "Sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "levelActivity": {
            "type": "integer",
            "description": "Level activity",
            "enum": [1, 2, 3, 4, 5],
            "example": 3
          },
          "DSN": {
            "type": "integer",
            "description": "Time for exercises per day",
            "example": 110
          },
          "BMR": {
            "type": "integer",
            "description": "Calories intake limit",
            "example": 4832
          }
        }
      },

      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwe123"
          }
        },
        "example": {
          "name": "John Doe",
          "email": "email@email.com",
          "password": "qwerty123"
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "required": ["token", "user"],
        "properties": {
          "token": {
            "type": "string",
            "description": "User token"
          },
          "user": {
            "type": "object",
            "required": ["_id", "name", "email", "avatarURL"],
            "properties": {
              "_id": {
                "type": "string",
                "example": "653800e44af33653569e9d93"
              },
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "Avatar URL"
              }
            }
          }
        },
        "example": {
          "token": "sdfhwry948efwefwef......",
          "user": {
            "name": "John Doe",
            "email": "email@email.com",
            "password": "qwerty123",
            "avatarURL": "www.gravatar.com/avatar/05b7a73aa00dae385fa8aaacc470ddce"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwe123"
          }
        },
        "example": {
          "email": "email@email.com",
          "password": "qwerty123"
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["token", "user"],
        "properties": {
          "token": {
            "type": "string",
            "description": "User token"
          },
          "user": {
            "type": "object",
            "required": ["_id", "name", "email", "avatarURL"],
            "properties": {
              "_id": {
                "type": "string",
                "example": "653800e44af33653569e9d93"
              },
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "Avatar URL"
              },
              "profile": {
                "type": "object",
                "required": [
                  "height, currentWeight, desiredWeight, birthday, blood, sex, levelActivity, DSN, BMR"
                ],
                "properties": {
                  "height": {
                    "type": "integer",
                    "description": "User height",
                    "minimum": 150,
                    "example": 170
                  },
                  "currentWeight": {
                    "type": "integer",
                    "description": "Current weight of user",
                    "minimum": 35,
                    "example": 85
                  },
                  "desiredWeight": {
                    "type": "integer",
                    "description": "Desire weight for user",
                    "minimum": 35,
                    "example": 70
                  },
                  "birthday": {
                    "type": "string",
                    "description": "Birth date",
                    "format": "UTC",
                    "example": "2000-12-20T00:00:00.000Z"
                  },
                  "blood": {
                    "type": "integer",
                    "description": "Blood type",
                    "enum": [1, 2, 3, 4],
                    "example": 4
                  },
                  "sex": {
                    "type": "string",
                    "description": "Sex",
                    "enum": ["male", "female"],
                    "example": "male"
                  },
                  "levelActivity": {
                    "type": "integer",
                    "description": "Level activity",
                    "enum": [1, 2, 3, 4, 5],
                    "example": 3
                  },
                  "DSN": {
                    "type": "integer",
                    "description": "Time for exercises per day ",
                    "example": 110
                  },
                  "BMR": {
                    "type": "integer",
                    "description": "Calories intake limit",
                    "example": 4832
                  }
                }
              }
            }
          }
        },
        "example": {
          "token": "sdfhwry948efwefwef......",
          "user": {
            "name": "John Doe",
            "email": "email@email.com",
            "password": "qwerty123",
            "avatarURL": "www.gravatar.com/avatar/05b7a73aa00dae385fa8aaacc470ddce",
            "profile": {
              "height": 170,
              "currentWeight": 65,
              "desiredWeight": 70,
              "birthday": "2000-12-20T00:00:00.000Z",
              "blood": 4,
              "sex": "male",
              "levelActivity": 3,
              "DSN": 110,
              "BMR": 4823
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "required": ["_id", "name", "email", "avatarURL"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "653800e44af33653569e9d93"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL"
          },
          "profile": {
            "type": "object",
            "required": [
              "height, currentWeight, desiredWeight, birthday, blood, sex, levelActivity, DSN, BMR"
            ],
            "properties": {
              "height": {
                "type": "integer",
                "description": "User height",
                "minimum": 150,
                "example": 170
              },
              "currentWeight": {
                "type": "integer",
                "description": "Current weight of user",
                "minimum": 35,
                "example": 85
              },
              "desiredWeight": {
                "type": "integer",
                "description": "Desire weight for user",
                "minimum": 35,
                "example": 70
              },
              "birthday": {
                "type": "string",
                "description": "Birth date",
                "format": "UTC",
                "example": "2000-12-20T00:00:00.000Z"
              },
              "blood": {
                "type": "integer",
                "description": "Blood type",
                "enum": [1, 2, 3, 4],
                "example": 4
              },
              "sex": {
                "type": "string",
                "description": "Sex",
                "enum": ["male", "female"],
                "example": "male"
              },
              "levelActivity": {
                "type": "integer",
                "description": "Level activity",
                "enum": [1, 2, 3, 4, 5],
                "example": 3
              },
              "DSN": {
                "type": "integer",
                "description": "Time for exercises per day ",
                "example": 110
              },
              "BMR": {
                "type": "integer",
                "description": "Calories intake limit",
                "example": 4832
              }
            }
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "required": ["_id", "name", "email", "avatarURL"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "profile": {
            "type": "object",
            "required": [
              "height, currentWeight, desiredWeight, birthday, blood, sex, levelActivity, DSN, BMR"
            ],
            "properties": {
              "height": {
                "type": "integer",
                "description": "User height",
                "minimum": 150,
                "example": 170
              },
              "currentWeight": {
                "type": "integer",
                "description": "Current weight of user",
                "minimum": 35,
                "example": 85
              },
              "desiredWeight": {
                "type": "integer",
                "description": "Desire weight for user",
                "minimum": 35,
                "example": 70
              },
              "birthday": {
                "type": "string",
                "description": "Birth date",
                "format": "UTC",
                "example": "2000-12-20T00:00:00.000Z"
              },
              "blood": {
                "type": "integer",
                "description": "Blood type",
                "enum": [1, 2, 3, 4],
                "example": 4
              },
              "sex": {
                "type": "string",
                "description": "Sex",
                "enum": ["male", "female"],
                "example": "male"
              },
              "levelActivity": {
                "type": "integer",
                "description": "Level activity",
                "enum": [1, 2, 3, 4, 5],
                "example": 3
              }
            }
          }
        }
      },
      "ExerciseResponse": {
        "type": "object",
        "properties": {
          "bodyPart": {
            "type": "string",
            "description": "Body part",
            "example": "Legs"
          },
          "equipment": {
            "type": "string",
            "description": "Equipment",
            "example": "Dumbbells"
          },
          "gifUrl": {
            "type": "string",
            "description": "Gif",
            "example": "https://example.com/exercise.gif"
          },
          "name": {
            "type": "string",
            "description": "Name of exercise",
            "example": "Squat"
          },
          "target": {
            "type": "string",
            "description": "Target of exercise",
            "example": "Strength"
          },
          "burnedCalories": {
            "type": "number",
            "description": "Quantity of burned calories",
            "example": 250
          },
          "time": {
            "type": "integer",
            "description": "Time of exercise",
            "example": 30
          }
        }
      },
      "ExerciseGroupsResponse": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Filter for exercise group",
            "example": "Legs"
          },
          "name": {
            "type": "string",
            "description": "Title of exercise group",
            "example": "Aboba"
          },
          "imgURL": {
            "type": "string",
            "description": "Image of exercise group",
            "example": "https://example.com/exercise.jpg"
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "required": ["groupBloodNotAllowed"],
        "properties": {
          "weight": {
            "type": "integer",
            "description": "Weight of product",
            "example": "100"
          },
          "calories": {
            "type": "integer",
            "description": "Quantity of calories",
            "example": "300"
          },
          "category": {
            "type": "string",
            "description": "Category of product",
            "example": "vegetables and herbs"
          },
          "title": {
            "type": "string",
            "description": "Title of product",
            "example": "Salads Belaya Dacha Delicate root"
          },
          "groupBloodNotAllowed": {
            "type": "object",
            "description": "Product is allowed or not for certain type of blood group",
            "properties": {
              "1": {
                "type": "boolean",
                "example": "true"
              },
              "2": {
                "type": "boolean",
                "example": "true"
              },
              "3": {
                "type": "boolean",
                "example": "true"
              },
              "4": {
                "type": "boolean",
                "example": "true"
              }
            }
          }
        }
      },
      "ProductsListResponse": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Title of product list",
            "example": "alcoholic drinks"
          }
        }
      },
      "AddProductDiaryRequest": {
        "type": "object",
        "required": ["product", "date", "amount", "calories"],
        "properties": {
          "product": {
            "type": "string",
            "description": "Product ID from collection of products for diary",
            "example": "5d51694902b2373622ff5773"
          },
          "date": {
            "type": "string",
            "description": "Data in format dd/mm/yyyy (e.g. 26/10/2023) || date",
            "example": "26/10/2023"
          },
          "amount": {
            "type": "integer",
            "description": "Product weight in gram for diary",
            "example": "100"
          },
          "calories": {
            "type": "integer",
            "description": "Consumed calories for diary",
            "example": "345"
          }
        }
      },
      "AddExerciseDiaryRequest": {
        "type": "object",
        "required": ["exercise", "date", "time", "calories"],
        "properties": {
          "exercise": {
            "type": "string",
            "description": "Exercise ID from collection of exercise for diary",
            "example": "5d51694902b2373622ff5773"
          },
          "date": {
            "type": "string",
            "description": "Data in format dd/mm/yyyy (e.g. 26/10/2023) || date",
            "example": "26/10/2023"
          },
          "time": {
            "type": "integer",
            "description": "Time of exercise for diary",
            "example": "180"
          },
          "calories": {
            "type": "integer",
            "description": "Consumed calories for diary",
            "example": "333"
          }
        }
      },
      "ItemDeleteFromDiaryRequest": {
        "type": "object",
        "required": ["itemId", "date", "tablename"],
        "properties": {
          "itemId": {
            "type": "string",
            "description": "Element Id from collection",
            "example": "5d51694902b2373622ff5773"
          },
          "date": {
            "type": "string",
            "description": "Data in format dd/mm/yyyy (e.g. 26/10/2023) || date",
            "example": "26/10/2023"
          },
          "tablename": {
            "type": "string",
            "enum": ["products", "exercises"],
            "example": "products",
            "description": "Table name where item will delete"
          }
        }
      },
      "DiaryResponse": {
        "type": "object",
        "required": [
          "_id",
          "owner",
          "date",
          "DSN",
          "BMR",
          "products",
          "exercises",
          "burnedCalories",
          "consumedCalories",
          "leftExercisesTime",
          "leftCalories"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Diary page ID",
            "example": "5d51694902b2373622ff5773"
          },
          "owner": {
            "type": "string",
            "description": "Owner user ID",
            "example": "6538e3ccfc9b82da0c901910"
          },

          "date": {
            "type": "string",
            "description": "Data in format dd/mm/yyyy (e.g. 26/10/2023)",
            "example": "26/10/2023"
          },
          "DSN": {
            "type": "integer",
            "description": "Sport time minimum in min. ",
            "example": "110"
          },
          "BMR": {
            "type": "integer",
            "description": "BMR maximum consumed calories",
            "example": "345"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": { "type": "string", "example": "Danbo cheese" },
                "category": {
                  "type": "string",
                  "example": "dairy"
                },
                "weight": {
                  "type": "integer",
                  "example": 100
                },
                "consumeCalories": {
                  "type": "integer",
                  "example": 150
                },
                "recommend": { "type": "boolean", "example": true },
                "_id": {
                  "type": "string",
                  "description": "ItemId in this list of products",
                  "example": "6540bdff1aef238df693f3eb"
                }
              }
            }
          },
          "exercises": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bodyPart": { "type": "string", "example": "chest" },
                "equipment": {
                  "type": "string",
                  "example": "leverage machine"
                },
                "name": {
                  "type": "string",
                  "example": "assisted chest dip (kneeling)"
                },
                "target": {
                  "type": "string",
                  "example": "pectorals"
                },
                "time": {
                  "type": "integer",
                  "description": "Time in second",
                  "example": 100
                },
                "burnedCalories": {
                  "type": "integer",
                  "example": 150
                },
                "_id": {
                  "type": "string",
                  "description": "ItemId in this list of exercises",
                  "example": "6540bdff1aef238df693f3eb"
                }
              }
            }
          },
          "burnedCalories": {
            "type": "integer",
            "description": "Total burned calories",
            "example": "3245"
          },
          "consumedCalories": {
            "type": "integer",
            "description": "Total consumed calories",
            "example": "2345"
          },
          "leftExercisesTime": {
            "type": "integer",
            "description": "Time for exercises left (min)",
            "example": "2345"
          },
          "leftCalories": {
            "type": "integer",
            "description": "Left for limit of consumed calories ",
            "example": "2345"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
